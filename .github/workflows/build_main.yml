name: Build runner binary (Main branch)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        include:
        - runtime: linux-x64
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: linux-arm64
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: linux-arm
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: osx-x64
          os: macOS-latest
          devScript: ./dev.sh

        - runtime: osx-arm64
          os: macOS-latest
          devScript: ./dev.sh

        - runtime: win-x64
          os: windows-latest
          devScript: ./dev

        - runtime: win-arm64
          os: windows-latest
          devScript: ./dev

        - runtime: linux-ppc64le
          os: ubuntu-24.04-ppc64le
          devScript: ./dev.sh

        - runtime: linux-s390x
          os: ubuntu-24.04-s390x
          devScript: ./dev.sh

    runs-on: ${{ matrix.os }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Cloning repo
        run: |
          git clone --branch main --depth 2 https://github.com/actions/runner.git
        working-directory: /tmp

      - name: Copy patches
        run: |
          mkdir -p /var/tmp/imagegeneration/
          cp patches/runner-main-sdk8-$(uname -m).patch /var/tmp/imagegeneration/runner-sdk-8.patch
        if: matrix.runtime == 'linux-ppc64le' || matrix.runtime == 'linux-s390x' 

      - name: Patching runner
        run: |
          git apply --whitespace=nowarn --allow-empty /var/tmp/imagegeneration/runner-sdk-8.patch
          sed -i'' -e '/version/s/8......"$/8.0.100"/' src/global.json
        working-directory: /tmp/runner
        if: matrix.runtime == 'linux-ppc64le' || matrix.runtime == 'linux-s390x' 
        
      - name: Build & Layout Release
        run: |
          sudo ${{ matrix.devScript }} layout Release ${{ matrix.runtime }}
        working-directory: /tmp/runner/src

      # Run tests
      - name: L0
        run: |
          sudo ${{ matrix.devScript }} test
        working-directory: /tmp/runner/src
        if: matrix.runtime != 'linux-arm64' && matrix.runtime != 'linux-arm' && matrix.runtime != 'osx-arm64' && matrix.runtime != 'win-arm64'

      # Create runner package tar.gz/zip
      - name: Package Release
        run: |
          sudo ${{ matrix.devScript }} package Release ${{ matrix.runtime }}
        working-directory: /tmp/runner/src

      # Upload runner package tar.gz/zip as artifact
      - name: Publish Artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: runner-package-${{ matrix.runtime }}
          path: |
            /tmp/runner/_package
      
      - name: Installing runner
        run: |
          sudo mkdir -p /tmp/runner/runner-package-${{ matrix.runtime }}
          sudo tar -xf /tmp/runner/_package/*.tar.gz -C /tmp/runner/runner-package-${{ matrix.runtime }}
          sudo /tmp/runner/runner-package-${{ matrix.runtime }}/config.sh --version
